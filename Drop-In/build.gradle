apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 12
        versionName '1.2.1'
        testInstrumentationRunner 'com.braintreepayments.api.ui.NoAnimationsInstrumentationTestRunner'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    // compile project(':BraintreeApi')

    // androidTestCompile project(':TestUtils')
}

task grantAnimationPermission(type: Exec, dependsOn: 'installDebugTest') {
    commandLine 'adb shell pm grant com.braintreepayments.api.dropin.test android.permission.SET_ANIMATION_SCALE'.split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connectedAndroidTest')) {
        task.dependsOn grantAnimationPermission
    }
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task projectDependenciesJar(type: Jar, dependsOn: android.libraryVariants.release.javaCompile) {
    archiveName "braintree-api-${android.defaultConfig.versionName}.jar"
    from {
        configurations.compile.findAll {
            it.getName() != 'android.jar'
        }.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task fullProjectZip(type: Zip, dependsOn: android.libraryVariants.release.javaCompile) {
    classifier = 'project'
    from fileTree(dir: 'src/main').exclude('java')

    into('libs') {
        from projectDependenciesJar
    }
    into('src') {
        from android.sourceSets.main.java.srcDirs
    }
}

fullProjectZip.dependsOn(projectDependenciesJar)
